What is fetch()?
fetch() is a built-in function in JavaScript used to make network requests (e.g., getting data from an API).

How fetch() Works
fetch() returns a Promise.
If the request is successful, the promise is resolved.
If the request fails (e.g., network issue), the promise is rejected.
-----------------------------------------------------------------------------------------------------
fetch('https://jsonplaceholder.typicode.com/posts/1')
    .then(response => response.json()) // Convert response to JSON
    .then(data => console.log(data)) // Handle the resolved data
    .catch(error => console.log("Error:", error)); // Handle errors
-----------------------------------------------------------------------------------------------------
How It Works:
fetch() makes a network request.
When the server responds:
If the response is successful → then(response) is called.
response.json() converts the response into a JavaScript object.
If successful → data is logged.
If the request fails → catch() handles the error.
-----------------------------------------------------------------------------------------------------
async function getData() {
    try {
        const response = await fetch('https://jsonplaceholder.typicode.com/posts/1');
        const data = await response.json();
        console.log(data);
    } catch (error) {
        console.log("Error:", error);
    }
}

getData();
How It Works:
await fetch() waits for the server response.
If the response is successful → await response.json() converts it to an object.
If successful → data is logged.
If the request fails → catch handles the error.
-----------------------------------------------------------------------------------------------------